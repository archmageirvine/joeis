<!-- Filter for excluding warnings we are not interested in -->
<FindBugsFilter>
     <!-- Exclude things which are not in our namespace -->
     <Match classregex="java.*"/>
     <Match classregex="junit.*"/>
     <Match classregex="org.*"/>
     <Match classregex="de.*"/>
     <Match classregex="io.*"/>
     <Match classregex="gebhardt.*"/>
     <Match classregex="jmason.*"/>
     <Match classregex="nonapi.*"/>
     <Match classregex="chesspresso.*"/>

     <!-- Exclude code generated by ANTLR4 -->
     <Match classregex="irvine.math.expression.GrammarLexer"/>
     <Match classregex="irvine.math.expression.GrammarParser"/>

     <!-- Some tests we will skip for all classes -->
     <!-- SnVI not needed because we do not use serialization for persistence -->
     <!-- PZLA is a stupid test about returning null arrays -->
     <!-- SPP is a stupid test about non-standard math constant -->
     <!-- CNT complains about values code to pi -->
     <!-- CT don't complain about exceptions in constructors -->
     <Match classregex=".*">
        <BugCode name="SnVI,PZLA,BC,SPP,CNT,CT,EI,EI2,ACEM,BL,CBX,CC,CFS,CLI,DMC,DSOC,EXS,FCCD,FPL,IMC,ITC,ITU,JVR,MDM,MOM,MRC,NOS,OCP,OPM,PCOA,PIS,PL,PMB,PRMC,PSC,S508C,SCII,SEC,SLS,UMTP,CNC"/>
     </Match>

     <Match classregex=".*">
        <Bug pattern="IOI_USE_OF_FILE_STREAM_CONSTRUCTORS,MDM_THREAD_YIELD,STT_STRING_PARSING_A_FIELD,STT_TOSTRING_STORED_IN_FIELD,STT_TOSTRING_MAP_KEYING"/>
     </Match>
     <Match classregex=".*Test">
        <BugCode name="FPL,PCAIL,RFI,SACM"/>
     </Match>
     <Match classregex=".*TestUtils">
        <BugCode name="RFI"/>
     </Match>

     <Match classregex=".*Test">
       <BugCode name="SIC"/>
     </Match>

     <Match classregex=".*">
        <Bug pattern="DM_DEFAULT_ENCODING"/>
     </Match>

     <!-- This test generating lots of false positives for 1.7 autoclose -->
     <Match classregex=".*">
        <Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE"/>
     </Match>
     <!-- Apparent false positives -->
     <Match classregex="irvine.oeis.AbstractSequenceTest" >
       <BugCode name="RCN" />
     </Match>

     <!-- Skip unreferenced field in anonymous classes -->
     <Match classregex=".*\$[0-9]+">
       <BugCode name="UrF"/>
     </Match>

     <!-- FCBL common pattern where we use fields in inner class in outer class -->
     <Match classregex=".*\$.*">
       <BugCode name="FCBL"/>
     </Match>

     <!-- Intentional uses of System.exit() -->
     <Match classregex="irvine.util.CliFlags\$1" >
       <BugPattern name="DM_EXIT" />
     </Match>

     <!-- Math code making careful use of equality on floating-point -->
     <Match classregex="irvine.math.c.C">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.Gamma">
       <BugCode name="FE,FL"/>
     </Match>
     <Match classregex="irvine.math.r.GammaTest">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.Beta">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.BetaTest">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.ExponentialTest">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.StudentTTest">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.real.Hypergeometric">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.Struve">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.Bessel">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.HyperbolicTest">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.twiddle.Crunch">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.twiddle.PrimitiveTimings">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.solve.Puzzle007">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.util.LimitedLengthPriorityQueue">
       <BugCode name="FE"/>
     </Match>
     <Match classregex="irvine.math.r.Airy">
       <BugCode name="FPL"/>
     </Match>

     <!-- Deliberate use in test -->
     <Match classregex="irvine.math.r.RealsTest">
       <BugCode name="UM"/>
     </Match>

     <Match classregex="irvine.math.PowerSetTest">
       <BugCode name="ITA"/>
     </Match>

     <!-- False positive for switch -->
     <Match classregex="irvine.math.LongUtils">
       <BugCode name="DB"/>
     </Match>

     <!-- Deliberate use of shortcut expression evaluation without expression -->
     <Match classregex="irvine.factor.factor.Cleaver">
       <BugCode name="UCF"/>
     </Match>

     <!-- Don't care about serialization in the OEIS -->
     <Match classregex="irvine.oeis.*">
       <BugCode name="Se"/>
     </Match>

     <!-- Fingbugs false-positive -->
     <Match classregex="irvine.math.r.Bessel">
       <BugCode name="DLS"/>
     </Match>
     <Match classregex="irvine.oeis.a042.A042947">
       <BugCode name="DLS"/>
     </Match>
     <Match classregex="irvine.oeis.a003.A003294">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a003.A003636">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a003.A003638">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a003.A003640">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a003.A003642">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a003.A003646">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a003.A003657">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a003.A003658">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a006.A006371">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a006.A006482">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.oeis.a006.A006641">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.euler.Euler539">
       <BugCode name="BIT"/>
     </Match>
     <Match classregex="irvine.math.r.TrigonometricIntegralTest">
       <BugCode name="CNT"/>
     </Match>
     <Match classregex="irvine.math.polynomial.CycleIndexReadBigN">
       <BugCode name="DMI"/>
     </Match>
     <Match classregex="irvine.math.graph.GraphUtils">
       <BugCode name="DMI"/>
     </Match>
     <Match classregex="irvine.oeis.a001.A001412">
       <BugCode name="MS"/>
     </Match>
     <Match classregex="irvine.oeis.a010.A010575">
       <BugCode name="MS"/>
     </Match>
     <Match classregex="irvine.oeis.a010.A010576">
       <BugCode name="MS"/>
     </Match>
     <Match classregex="irvine.oeis.a001.A001334">
       <BugCode name="MS"/>
     </Match>
     <Match classregex="irvine.oeis.a001.A001336">
       <BugCode name="MS"/>
     </Match>
     <Match classregex="irvine.oeis.a001.A001666">
       <BugCode name="MS"/>
     </Match>
     <Match classregex="irvine.oeis.a034.A034011">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a036.A036345">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a036.A036346">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a036.A036382">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a036.A036688">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a045.A045913">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a053.A053432">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a068.A068569">
       <BugCode name="SEO"/>
     </Match>
     <!-- False positives, these cannot be reordered. -->
     <Match classregex="gebhardt.PermGrpC">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="gebhardt.Canonical">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a055.A055187">
       <BugCode name="LSC"/>
     </Match>
     <Match classregex="irvine.oeis.a070.A070566">
       <BugCode name="DLC"/>
     </Match>

     <!-- I am allowed to ignore return values and have absolute paths in a test -->
     <Match classregex=".*Test">
       <BugCode name="RV"/>
     </Match>
     <Match classregex=".*Test">
       <BugCode name="DMI"/>
     </Match>

     <!-- false-positive -->
     <Match classregex="irvine.oeis.a008.A008866">
       <BugCode name="FCBL"/>
     </Match>
     <Match classregex="irvine.oeis.a000.A000066">
       <BugCode name="FCBL"/>
     </Match>
     <Match classregex="irvine.oeis.a053.A053020">
       <BugCode name="FCBL"/>
     </Match>

     <Match classregex="irvine.util.CliFlags\$Flag">
       <BugCode name="LEST,UCPM,URV"/>
     </Match>

     <Match classregex="irvine.util.io.IOUtils">
       <BugCode name="LEST"/>
     </Match>
     <Match classregex="irvine.math.lattice.*">
       <BugCode name="COM"/>
     </Match>

     <!-- false-positives? -->
     <Match classregex="irvine.oeis.a007.A007756">
       <BugCode name="SEO"/>
     </Match>
     <Match classregex="irvine.oeis.a023.A023107">
       <BugCode name="WOC"/>
     </Match>
     <Match classregex="irvine.oeis.a047.A047988">
       <BugCode name="WOC"/>
     </Match>
     <Match classregex="irvine.oeis.a048.A048200">
       <BugCode name="WOC"/>
     </Match>
     <Match classregex="irvine.oeis.a048.A048823">
       <BugCode name="WOC"/>
     </Match>
     <Match classregex="irvine.oeis.a048.A048825">
       <BugCode name="WOC"/>
     </Match>
     <Match classregex="irvine.oeis.global.OeisTree">
       <BugCode name="LII"/>
     </Match>
     <Match classregex="irvine.factor.factor.FibonacciFactorizer">
       <BugCode name="PCAIL"/>
     </Match>
     <Match classregex="irvine.oeis.*">
       <BugCode name="PCAIL"/>
     </Match>
     <Match classregex="irvine.math.group.Singleton">
       <BugCode name="SING"/>
     </Match>

     <!-- We have some iterators over infinite sets. -->
     <Match>
       <Bug pattern="IT_NO_SUCH_ELEMENT" />
     </Match>

</FindBugsFilter>
