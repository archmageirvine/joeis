<?xml version="1.0" ?>
<project name="joeis" default="jar">

  <property name="src.dir" value="src"/>
  <property name="test.dir" value="test"/>
  <property name="internal.dir" value="internal"/>
  <property name="build.dir" value="build.tmp"/>
  <property name="lib.dir" value="lib"/>
  <property name="tools.dir" value="tools"/>

  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="lib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="compile-grammar" description="Compile the ANTLR grammar">
    <java classname="org.antlr.v4.Tool" fork="true" failonerror="true">
      <classpath>
        <fileset dir="${lib.dir}" includes="antlr-4.5-complete.jar" />
        <pathelement location="${src.dir}" />
      </classpath>
      <arg value="-Dlanguage=Java"/>
      <arg value="-no-visitor"/>
      <arg value="-no-listener"/>
      <arg value="-package"/>
      <arg value="irvine.math.expression"/>
      <arg value="${src.dir}/irvine/math/expression/Grammar.g4"/>
    </java>
  </target>

  <target name="compile-src" description="Compile the source" depends="compile-grammar">
    <mkdir dir="${build.dir}/classes"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}/classes" source="1.8" includeantruntime="false">
      <classpath>
        <fileset dir="${lib.dir}" includes="**/*.jar" />
      </classpath>
      <compilerarg value="-Xlint:unchecked" />
    </javac>
  </target>

  <target name="compile-internal" description="Compile the internal">
    <javac srcdir="${internal.dir}" source="1.8" destdir="${build.dir}/classes" includeantruntime="false">
      <classpath>
        <pathelement path="${src.dir}"/>
        <fileset dir="${lib.dir}" includes="**/*.jar" />
      </classpath>
      <compilerarg value="-Xlint:unchecked" />
    </javac>
  </target>

  <target name="compile-test" description="Compile the tests">
    <javac srcdir="${test.dir}" source="1.8" destdir="${build.dir}/classes" includeantruntime="false">
      <classpath>
        <pathelement path="${src.dir}"/>
        <pathelement path="${internal.dir}"/>
        <fileset dir="${lib.dir}" includes="**/*.jar" />
      </classpath>
      <compilerarg value="-Xlint:unchecked" />
    </javac>
  </target>

  <target name="jar" description="Make a release jar" depends="compile-src">
    <jar destfile="${build.dir}/joeis.jar" update="false" zip64Mode="as-needed">
      <fileset dir="${build.dir}/classes"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/**/*.dat"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/**/*.dat.gz"/>
      <fileset dir="${src.dir}" includes="irvine/nt/fibonacci/*.dat"/>
      <fileset dir="${src.dir}" includes="irvine/math/group/ag/*.gz"/>
      <fileset dir="${src.dir}" includes="irvine/math/group/gl/*.gz"/>
      <fileset dir="${src.dir}" includes="irvine/math/group/resources/*.dat"/>
      <fileset dir="${src.dir}" includes="irvine/math/z/fibonacci/*.dat"/>
      <fileset dir="${src.dir}" includes="irvine/factor/project/em/em*"/>
      <fileset dir="${src.dir}" includes="irvine/factor/project/oeis/a*"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/a000/landau.gz"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/a000/landau*.gz"/>
      <fileset dir="${src.dir}" includes="cheat/*.dat.gz"/>

      <zipfileset src="${lib.dir}/apfloat.jar" excludes="META-INF/**"/>
      <zipfileset src="${lib.dir}/antlr-4.5-complete.jar" excludes="META-INF/**"/>
      <zipfileset src="${lib.dir}/chesspresso-lib.jar" excludes="META-INF/**"/>
      <zipfileset src="${lib.dir}/teherba.jar" excludes="META-INF/**"/>
      <manifest>
        <attribute name="Main-Class" value="irvine.oeis.SequenceFactory"/>
        <attribute name="Implementation-Title" value="jOEIS"/>
        <attribute name="Implementation-Version" value="1.1"/>
        <attribute name="Implementation-Vendor" value="Sean A. Irvine"/>
      </manifest>
    </jar>
  </target>

  <target name="release" description="Make a release of OEIS" depends="jar">
    <property name="outdir" value="joeis-201902" />
    <zip destfile="${build.dir}/joeis.zip" duplicate="fail" >
      <zipfileset fullpath="${outdir}/joeis.jar" dir="${build.dir}" includes="joeis.jar"/>
      <zipfileset fullpath="${outdir}/joeis" dir="resources" includes="joeis" filemode="755"/>
    </zip>
  </target>

  <target name="all-jar" description="Make a jar including tests" depends="compile-src,compile-internal,compile-test">
    <jar destfile="${build.dir}/joeis.jar" update="false" zip64Mode="always">
      <fileset dir="${build.dir}/classes"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/**/*.dat"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/**/*.dat.gz"/>
      <fileset dir="${src.dir}" includes="irvine/nt/fibonacci/*.dat"/>
      <fileset dir="${src.dir}" includes="irvine/math/group/ag/*.gz"/>
      <fileset dir="${src.dir}" includes="irvine/math/group/gl/*.gz"/>
      <fileset dir="${src.dir}" includes="irvine/math/group/resources/*.dat"/>
      <fileset dir="${src.dir}" includes="irvine/math/z/fibonacci/*.dat"/>
      <fileset dir="${src.dir}" includes="irvine/factor/project/em/em*"/>
      <fileset dir="${src.dir}" includes="irvine/factor/project/oeis/a*"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/a000/landau.gz"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/a000/landau*.gz"/>
      <fileset dir="${src.dir}" includes="cheat/*.dat.gz"/>

      <fileset dir="${test.dir}" includes="irvine/oeis/seq/*"/>
      <fileset dir="${test.dir}" includes="irvine/oeis/**/*.dat"/>
      <fileset dir="${test.dir}" includes="irvine/math/nauty/*.lst"/>
      <fileset dir="${test.dir}" includes="irvine/factor/**/*.dat"/>
      <fileset dir="${test.dir}" includes="irvine/graph/*.gph"/>
      <fileset dir="${test.dir}" includes="irvine/math/long-suck.dat"/>

      <zipfileset src="${lib.dir}/antlr-4.5-complete.jar" excludes="META-INF/**"/>
      <zipfileset src="${lib.dir}/apfloat.jar" excludes="META-INF/**"/>
      <zipfileset src="${lib.dir}/chesspresso-lib.jar" excludes="META-INF/**"/>
      <zipfileset src="${lib.dir}/classgraph-4.8.80.jar" excludes="META-INF/**"/>
      <zipfileset src="${lib.dir}/junit.jar" excludes="META-INF/**"/>
      <zipfileset src="${lib.dir}/teherba.jar" excludes="META-INF/**"/>
      <manifest>
        <attribute name="Main-Class" value="irvine.oeis.SequenceFactory"/>
        <attribute name="Implementation-Title" value="jOEIS"/>
        <attribute name="Implementation-Version" value="1.1"/>
        <attribute name="Implementation-Vendor" value="Sean A. Irvine"/>
      </manifest>
    </jar>
  </target>

  <target name="z-jar" description="Make a jar for Z big integer arithmetic" depends="compile-src,compile-internal,compile-test">
    <jar destfile="${build.dir}/z.jar" update="false">
      <fileset dir="${build.dir}/classes" includes="irvine/math/z/**/*.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/api/**/*.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/group/**/*.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/set/**/*.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/r/Constants.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/r/DoubleUtils.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/IntegerUtils.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/LongUtils.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/MemoryFunction2.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/factor/**/*.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/factorial/Factorial.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/math/factorial/MemoryFactorial.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/util/AbstractIterator.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/util/Pair.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/util/io/**/*.class"/>
      <fileset dir="${build.dir}/classes" includes="irvine/util/string/StringUtils.class"/>
      <fileset dir="${src.dir}" includes="irvine/math/z/fibonacci/*.dat"/>

      <!-- Stuff only needed for unit tests -->
      <fileset dir="${build.dir}/classes" includes="irvine/StandardIoTestCase.class"/>
      <fileset dir="${src.dir}" includes="irvine/oeis/a046/a046461.dat"/>
      <zipfileset src="${lib.dir}/junit.jar" excludes="META-INF/**"/>

      <manifest>
        <attribute name="Main-Class" value="irvine.math.z.AllTests"/>
        <attribute name="Implementation-Title" value="Z"/>
        <attribute name="Implementation-Version" value="1.1"/>
        <attribute name="Implementation-Vendor" value="Sean A. Irvine"/>
      </manifest>
    </jar>
  </target>

  <!--
  <property name="pitest.dir" value="pitest"/>
  <path id="pitest.classpath">
    <pathelement location="${pitest.dir}/pitest-ant-1.1.10.jar"/>
    <pathelement location="${pitest.dir}/junit-4.12.jar"/>
    <pathelement location="${pitest.dir}/pitest-1.1.10.jar"/>
  </path>

  <taskdef name="pitest" classname="org.pitest.ant.PitestTask" classpathref="pitest.classpath" onerror="report"/>
  
  <target name="pitest" depends="compile-test" description="Run pitest mutation testing. -Djava.class=xxx">
    <path id="mutation.path">
      <pathelement path="${src.dir}"/>
      <pathelement path="${test.dir}"/>
      <path refid="pitest.classpath"/>
      <pathelement location="lib/jumble-annotations.jar"/>
    </path>
    <java classpathref="mutation.path" classname="FindTestClasses" outputproperty="test.class">
      <arg value="${java.class}"/>
    </java>

    <pitest
        pitClasspath="pitest.classpath"
        classPath="mutation.path"
        targetClasses="${java.class}"
        targetTests="${test.class}"
        reportDir="/tmp/pitest"
        sourceDir="src,test"
        outputFormats="HTML,XML,CSV"
        />
  </target>
-->

  <property name="checkstyle.basedir" location="${tools.dir}/checkstyle"/>
  <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpath="${checkstyle.basedir}/lib/checkstyle-8.27-all.jar" />
  <property name="checkstyle.suppressions.file" location=".cvscheck/checkstyle_suppressions.xml" />
  <target name="checkstyle" depends="compile-src,compile-internal,compile-test" description="Run checkstyle">
    <checkstyle config=".cvscheck/checkstyle_config.xml">
      <fileset dir="${src.dir}" includes="**/*.java" />
      <fileset dir="${internal.dir}" includes="**/*.java" />
      <fileset dir="${test.dir}" includes="**/*.java" />
      <formatter type="plain" />
    </checkstyle>
  </target>

  <target name="spellcheck" description="Run spellchecker">
    <java jar="${tools.dir}/spelling.jar" fork="true">
      <arg line="-c"/>
      <arg file=".cvscheck/spelling.case-sensitive"/>
      <arg line="-d"/>
      <arg file=".cvscheck/spelling.case-insensitive"/>
      <arg line="-x"/>
      <arg file=".cvscheck/spelling.excludes"/>
      <arg line="--classpath"/>
      <arg path="${build.dir}"/>
      <arg file="${src.dir}"/>
      <arg file="${test.dir}"/>
    </java>
  </target>

</project>
