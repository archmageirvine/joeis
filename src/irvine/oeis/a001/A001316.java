package irvine.oeis.a001;
// Generated by gen_seq4.pl genet at 2020-12-16 11:03
// DO NOT EDIT here!

import irvine.math.z.Z;
import irvine.oeis.GeneralizedEulerTransform;


/**
 * A001316 Gould's sequence: a(n) = Sum_{k=0..n} (binomial(n,k) mod 2); number of odd entries in row n of Pascal's triangle (A007318); 2^A000120(n).
 * G.f.: <code>Product_{k&gt;=0} ((1+2*x^(2^k)))</code>
 * @author Georg Fischer
 */
public class A001316 extends GeneralizedEulerTransform {

  /**
   * Construct the sequence.
   */
  public A001316() {
    super(0, 0);
    mNextH = advanceH(mKh);
  }

  @Override
  protected Z[] advanceF(final long k) {
    return new Z[]{Z.NEG_ONE};
  }

  @Override
  protected Z advanceG(final long k) {
    return Z.TWO.negate();
  }

  @Override
  protected Z advanceH(final long k) {
    return Z.TWO.pow(k);
  }

}
