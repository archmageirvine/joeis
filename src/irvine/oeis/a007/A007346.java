package irvine.oeis.a007;

import irvine.math.function.Functions;
import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;

/**
 * A007346 Order of group generated by perfect shuffles of 2n cards.
 * @author Sean A. Irvine
 */
public class A007346 extends AbstractSequence {

  /**
   * Constructor with offset.
   * @param offset first index
   */
  protected A007346(final int offset) {
    super(offset);
  }

  /** Construct the sequence. */
  public A007346() {
    super(1);
  }

  private int mN = 0;

  @Override
  public Z next() {
    switch (++mN) {
      case 1:
        return Z.TWO;
      case 2:
        return Z.EIGHT;
      case 6:
        return Z.valueOf(7680);
      case 12:
        return Z.valueOf(194641920);
      default:
        break;
    }
    if ((mN & 1) == 1) {
      return Functions.FACTORIAL.z(mN).shiftLeft(mN - 1);
    } else if ((mN & 3) == 2) {
      return Functions.FACTORIAL.z(mN).shiftLeft(mN);
    } else {
      int np = mN;
      int k = 1;
      while ((np & 1) == 0) {
        np >>>= 1;
        ++k;
      }
      if (mN == 1 << (k - 1)) {
        return Z.valueOf(k).shiftLeft(k);
      } else {
        return Functions.FACTORIAL.z(mN).shiftLeft(mN - 2);
      }
    }
  }
}
