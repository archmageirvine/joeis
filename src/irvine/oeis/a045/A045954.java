package irvine.oeis.a045;

import irvine.math.z.Z;
import irvine.oeis.Sequence1;
import irvine.util.array.LongDynamicLongArray;

/**
 * A045954 Even-Lucky-Numbers: generated by a sieve process like that for Lucky numbers but starting with even numbers.
 * @author Sean A. Irvine
 */
public class A045954 extends Sequence1 {

  // Cf. A000959.

  protected final LongDynamicLongArray mEvenLucky = new LongDynamicLongArray();
  private long mN = -1;
  private long mG = 0;

  @Override
  public Z next() {
    if (++mN == 0) {
      mEvenLucky.set(0, 2L);
    } else if (mN == 1) {
      mEvenLucky.set(1, 4L);
    } else {
      if (mEvenLucky.get(mG + 1) <= mN + 1) {
        ++mG;
      }
      long k = mN;
      for (long i = mG; i > 0; --i) {
        k = k * mEvenLucky.get(i) / (mEvenLucky.get(i) - 1);
      }
      k = 2 * k;
      mEvenLucky.set(mN, k + 2);
    }
    return Z.valueOf(mEvenLucky.get(mN));
  }
}
