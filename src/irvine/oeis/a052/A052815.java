package irvine.oeis.a052;

import irvine.math.group.PolynomialRingField;
import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.math.q.Rationals;
import irvine.math.z.Euler;
import irvine.math.z.Z;
import irvine.oeis.Sequence0;

/**
 * A052815 Number of objects generated by the Combstruct grammar defined in the Maple program. See the link for the grammar specification.
 * @author Sean A. Irvine
 */
public class A052815 extends Sequence0 {

  private static final PolynomialRingField<Q> RING = new PolynomialRingField<>(Rationals.SINGLETON);
  private Polynomial<Q> mA = RING.x();
  private int mN = -1;

  static Polynomial<Q> cik(final Polynomial<Q> p, final int n) {
    final Polynomial<Q> t = RING.series(RING.one(), RING.subtract(RING.one(), p), n);
    Polynomial<Q> res = RING.zero();
    for (int d = 1; d <= n; ++d) {
      final Polynomial<Q> s = RING.log(t.substitutePower(d, n), n);
      res = RING.add(res, RING.multiply(s, new Q(Euler.phiAsLong(d), d)));
    }
    return res;
  }

  @Override
  public Z next() {
    if (++mN > 0) {
      mA = cik(RING.series(RING.x(), RING.subtract(RING.one(), mA), mN), mN);
    }
    return mA.coeff(mN).toZ();
  }
}
