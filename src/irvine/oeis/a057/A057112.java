package irvine.oeis.a057;

import irvine.oeis.FiniteSequence;

/**
 * A057112 Sequence of 719 adjacent transpositions (a[n] a[n]+1), which, when starting from the identity permutation and applied successively, produce a Hamiltonian circuit/path through all 720 permutations of S_6, in such a way that S_{n-1} is always traversed before the rest of S_n.
 * @author Sean A. Irvine
 */
public class A057112 extends FiniteSequence {

  /** Construct the sequence. */
  public A057112() {
    super(1, 2, 1, 2, 1, 3, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 1, 3, 2, 3, 2, 3, 4, 1, 2, 1, 2, 1,
      3, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 1, 3, 2, 3, 2, 3, 4, 1, 2, 1, 2, 1, 3, 1, 2, 3, 2, 1, 2,
      3, 2, 1, 2, 3, 1, 3, 2, 3, 2, 3, 4, 1, 2, 1, 2, 1, 3, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 1, 3,
      2, 3, 2, 3, 4, 1, 2, 1, 2, 1, 3, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 1, 3, 2, 3, 2, 3, 5, 4, 3,
      2, 1, 5, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2,
      1, 4, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1,
      3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 2,
      1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 5, 1,
      2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 4, 1, 2,
      3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3,
      4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 2, 1, 2, 3, 4,
      3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 5, 1, 2, 3, 4, 1,
      4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 4, 1, 2, 3, 4, 1, 4,
      3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3,
      2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 2, 1, 2, 3, 4, 3, 4, 3, 2,
      1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 5, 1, 2, 3, 4, 1, 4, 3, 2, 1,
      3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 4, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3,
      1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1,
      2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 2, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2,
      3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 5, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3,
      4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 4, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4,
      3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 1,
      4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4, 3, 2, 1, 2, 1, 2, 3, 4, 3, 4, 3, 2, 1, 3, 1, 2, 3, 4, 3, 4,
      3, 2, 1, 3, 1, 2, 3, 4);
  }
}
