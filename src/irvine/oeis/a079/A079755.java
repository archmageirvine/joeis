package irvine.oeis.a079;
// Generated by gen_seq4.pl cordrectab/cordrec at 2022-07-15 23:04

import irvine.math.z.Z;
import irvine.oeis.recur.ConstantOrderRecurrence;

/**
 * A079755 Operation count to create all permutations of n distinct elements using the "streamlined" version of Knuth's Algorithm L (lexicographic permutation generation).
 * <code>a(n)=n*a(n-1)+(n-1)*((n-1)/2)</code>
 * @author Georg Fischer
 */
public class A079755 extends ConstantOrderRecurrence {

  /** Construct the sequence */
  public A079755() {
    super(3, 1, 0, 0);
  }

  @Override
  protected Z compute(final int n) {
    return a(n - 1).multiply(n).add(Z.valueOf(n - 1).multiply((n - 1) / 2));
  }
}
