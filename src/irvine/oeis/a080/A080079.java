package irvine.oeis.a080;
// Generated by gen_seq4.pl deriv at 2021-06-28 18:44

import irvine.math.z.Z;
import irvine.oeis.Sequence;
import irvine.oeis.Sequence1;
import irvine.oeis.a004.A004755;

/**
 * A080079 Least number causing the longest carry sequence when adding numbers &lt;= n to n in binary representation.
 * @author Georg Fischer
 */
public class A080079 extends Sequence1 {

  final Sequence mA004755 = new A004755();
  protected long mN;
  /** Construct the sequence. */
  public A080079() {
    mN = 0;
  }
  
  @Override
  public Z next() {
    ++mN;
    return mA004755.next().subtract(Z.TWO.multiply(Z.valueOf(mN)));
  }

}
