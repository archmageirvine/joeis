package irvine.oeis.a094;
// Generated by gen_seq4.pl egfsi at 2021-12-01 15:37

import irvine.math.group.PolynomialRingField;
import irvine.math.q.Q;
import irvine.math.q.Rationals;
import irvine.math.z.Z;
import irvine.oeis.Sequence0;

/**
 * A094732 Number of connected ordered 5-element multiantichains on a labeled n-set.
 * E.g.f.: exp(31*x) - 20*exp(23*x) + 60*exp(19*x) + 20*exp(17*x) + 5*exp(16*x) - 95*exp(15*x) - 120*exp(14*x) + 150*exp(13*x) + 180*exp(12*x) - 420*exp(11*x) - 110*exp(10*x) + 620*exp(9*x) + 160*exp(8*x) - 690*exp(7*x) + 840*exp(6*x) - 936*exp(5*x) - 1140*exp(4*x) + 3560*exp(3*x) - 3010*exp(2*x) + 1095*exp(x) - 150
 * @author Georg Fischer
 */
public class A094732 extends Sequence0 {

  private static final PolynomialRingField<Q> RING = new PolynomialRingField<>(Rationals.SINGLETON);
  private int mN = -1;
  private Z mF = Z.ONE;

  @Override
  public Z next() {
    if (++mN != 0) {
      mF = mF.multiply(mN);
    }
    return RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.subtract(RING.add(RING.subtract(RING.add(RING.add(RING.subtract(RING.subtract(RING.add(RING.add(RING.subtract(RING.subtract(RING.add(RING.add(RING.add(RING.subtract(RING.exp(RING.monomial(new Q(31), 1), mN), RING.multiply(RING.monomial(new Q(20), 0), RING.exp(RING.monomial(new Q(23), 1), mN), mN)), RING.multiply(RING.monomial(new Q(60), 0), RING.exp(RING.monomial(new Q(19), 1), mN), mN)), RING.multiply(RING.monomial(new Q(20), 0), RING.exp(RING.monomial(new Q(17), 1), mN), mN)), RING.multiply(RING.monomial(Q.FIVE, 0), RING.exp(RING.monomial(new Q(16), 1), mN), mN)), RING.multiply(RING.monomial(new Q(95), 0), RING.exp(RING.monomial(new Q(15), 1), mN), mN)), RING.multiply(RING.monomial(new Q(120), 0), RING.exp(RING.monomial(new Q(14), 1), mN), mN)), RING.multiply(RING.monomial(new Q(150), 0), RING.exp(RING.monomial(new Q(13), 1), mN), mN)), RING.multiply(RING.monomial(new Q(180), 0), RING.exp(RING.monomial(new Q(12), 1), mN), mN)), RING.multiply(RING.monomial(new Q(420), 0), RING.exp(RING.monomial(new Q(11), 1), mN), mN)), RING.multiply(RING.monomial(new Q(110), 0), RING.exp(RING.monomial(Q.TEN, 1), mN), mN)), RING.multiply(RING.monomial(new Q(620), 0), RING.exp(RING.monomial(Q.NINE, 1), mN), mN)), RING.multiply(RING.monomial(new Q(160), 0), RING.exp(RING.monomial(Q.EIGHT, 1), mN), mN)), RING.multiply(RING.monomial(new Q(690), 0), RING.exp(RING.monomial(Q.SEVEN, 1), mN), mN)), RING.multiply(RING.monomial(new Q(840), 0), RING.exp(RING.monomial(Q.SIX, 1), mN), mN)), RING.multiply(RING.monomial(new Q(936), 0), RING.exp(RING.monomial(Q.FIVE, 1), mN), mN)), RING.multiply(RING.monomial(new Q(1140), 0), RING.exp(RING.monomial(Q.FOUR, 1), mN), mN)), RING.multiply(RING.monomial(new Q(3560), 0), RING.exp(RING.monomial(Q.THREE, 1), mN), mN)), RING.multiply(RING.monomial(new Q(3010), 0), RING.exp(RING.monomial(Q.TWO, 1), mN), mN)), RING.multiply(RING.monomial(new Q(1095), 0), RING.exp(RING.x(), mN), mN)), RING.monomial(new Q(150), 0)).coeff(mN).multiply(mF).toZ();
  }
}
