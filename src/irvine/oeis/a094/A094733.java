package irvine.oeis.a094;
// Generated by gen_seq4.pl egfsi at 2021-12-01 15:37

import irvine.math.group.PolynomialRingField;
import irvine.math.q.Q;
import irvine.math.q.Rationals;
import irvine.math.z.Z;
import irvine.oeis.Sequence0;

/**
 * A094733 Number of connected ordered 6-element multiantichains on a labeled n-set.
 * E.g.f.: exp(63*x) - 30*exp(47*x) + 120*exp(39*x) + 60*exp(35*x) + 60*exp(33*x) - 18*exp(32*x) - 324*exp(31*x) - 720*exp(29*x) + 810*exp(27*x) + 120*exp(26*x) + 480*exp(25*x) + 480*exp(24*x) - 900*exp(23*x) - 720*exp(22*x) - 240*exp(21*x) - 900*exp(20*x) + 2640*exp(19*x) + 615*exp(18*x) + 480*exp(17*x) + 510*exp(16*x) - 2955*exp(15*x) - 5070*exp(14*x) + 3960*exp(13*x) + 7320*exp(12*x) - 8640*exp(11*x) - 4860*exp(10*x) + 10620*exp(9*x) + 9210*exp(8*x) - 21910*exp(7*x) + 16290*exp(6*x) - 120*exp(5*x) - 34470*exp(4*x) + 53925*exp(3*x) - 34950*exp(2*x) + 10208*exp(x) - 1082
 * @author Georg Fischer
 */
public class A094733 extends Sequence0 {

  private static final PolynomialRingField<Q> RING = new PolynomialRingField<>(Rationals.SINGLETON);
  private int mN = -1;
  private Z mF = Z.ONE;

  @Override
  public Z next() {
    if (++mN != 0) {
      mF = mF.multiply(mN);
    }
    return RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.subtract(RING.add(RING.subtract(RING.add(RING.add(RING.subtract(RING.subtract(RING.add(RING.add(RING.subtract(RING.subtract(RING.add(RING.add(RING.add(RING.add(RING.subtract(RING.subtract(RING.subtract(RING.subtract(RING.add(RING.add(RING.add(RING.add(RING.subtract(RING.subtract(RING.subtract(RING.add(RING.add(RING.add(RING.subtract(RING.exp(RING.monomial(new Q(63), 1), mN), RING.multiply(RING.monomial(new Q(30), 0), RING.exp(RING.monomial(new Q(47), 1), mN), mN)), RING.multiply(RING.monomial(new Q(120), 0), RING.exp(RING.monomial(new Q(39), 1), mN), mN)), RING.multiply(RING.monomial(new Q(60), 0), RING.exp(RING.monomial(new Q(35), 1), mN), mN)), RING.multiply(RING.monomial(new Q(60), 0), RING.exp(RING.monomial(new Q(33), 1), mN), mN)), RING.multiply(RING.monomial(new Q(18), 0), RING.exp(RING.monomial(new Q(32), 1), mN), mN)), RING.multiply(RING.monomial(new Q(324), 0), RING.exp(RING.monomial(new Q(31), 1), mN), mN)), RING.multiply(RING.monomial(new Q(720), 0), RING.exp(RING.monomial(new Q(29), 1), mN), mN)), RING.multiply(RING.monomial(new Q(810), 0), RING.exp(RING.monomial(new Q(27), 1), mN), mN)), RING.multiply(RING.monomial(new Q(120), 0), RING.exp(RING.monomial(new Q(26), 1), mN), mN)), RING.multiply(RING.monomial(new Q(480), 0), RING.exp(RING.monomial(new Q(25), 1), mN), mN)), RING.multiply(RING.monomial(new Q(480), 0), RING.exp(RING.monomial(new Q(24), 1), mN), mN)), RING.multiply(RING.monomial(new Q(900), 0), RING.exp(RING.monomial(new Q(23), 1), mN), mN)), RING.multiply(RING.monomial(new Q(720), 0), RING.exp(RING.monomial(new Q(22), 1), mN), mN)), RING.multiply(RING.monomial(new Q(240), 0), RING.exp(RING.monomial(new Q(21), 1), mN), mN)), RING.multiply(RING.monomial(new Q(900), 0), RING.exp(RING.monomial(new Q(20), 1), mN), mN)), RING.multiply(RING.monomial(new Q(2640), 0), RING.exp(RING.monomial(new Q(19), 1), mN), mN)), RING.multiply(RING.monomial(new Q(615), 0), RING.exp(RING.monomial(new Q(18), 1), mN), mN)), RING.multiply(RING.monomial(new Q(480), 0), RING.exp(RING.monomial(new Q(17), 1), mN), mN)), RING.multiply(RING.monomial(new Q(510), 0), RING.exp(RING.monomial(new Q(16), 1), mN), mN)), RING.multiply(RING.monomial(new Q(2955), 0), RING.exp(RING.monomial(new Q(15), 1), mN), mN)), RING.multiply(RING.monomial(new Q(5070), 0), RING.exp(RING.monomial(new Q(14), 1), mN), mN)), RING.multiply(RING.monomial(new Q(3960), 0), RING.exp(RING.monomial(new Q(13), 1), mN), mN)), RING.multiply(RING.monomial(new Q(7320), 0), RING.exp(RING.monomial(new Q(12), 1), mN), mN)), RING.multiply(RING.monomial(new Q(8640), 0), RING.exp(RING.monomial(new Q(11), 1), mN), mN)), RING.multiply(RING.monomial(new Q(4860), 0), RING.exp(RING.monomial(Q.TEN, 1), mN), mN)), RING.multiply(RING.monomial(new Q(10620), 0), RING.exp(RING.monomial(Q.NINE, 1), mN), mN)), RING.multiply(RING.monomial(new Q(9210), 0), RING.exp(RING.monomial(Q.EIGHT, 1), mN), mN)), RING.multiply(RING.monomial(new Q(21910), 0), RING.exp(RING.monomial(Q.SEVEN, 1), mN), mN)), RING.multiply(RING.monomial(new Q(16290), 0), RING.exp(RING.monomial(Q.SIX, 1), mN), mN)), RING.multiply(RING.monomial(new Q(120), 0), RING.exp(RING.monomial(Q.FIVE, 1), mN), mN)), RING.multiply(RING.monomial(new Q(34470), 0), RING.exp(RING.monomial(Q.FOUR, 1), mN), mN)), RING.multiply(RING.monomial(new Q(53925), 0), RING.exp(RING.monomial(Q.THREE, 1), mN), mN)), RING.multiply(RING.monomial(new Q(34950), 0), RING.exp(RING.monomial(Q.TWO, 1), mN), mN)), RING.multiply(RING.monomial(new Q(10208), 0), RING.exp(RING.x(), mN), mN)), RING.monomial(new Q(1082), 0)).coeff(mN).multiply(mF).toZ();
  }
}
