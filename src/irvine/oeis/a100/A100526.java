package irvine.oeis.a100;
// Generated by gen_seq4.pl expr_gen/lambda at 2023-09-13 11:40

import irvine.math.z.Binomial;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A100526 Number of local binary search trees (i.e., labeled binary trees such that every left child has a smaller label than its parent and every right child has a larger label than its parent) with n vertices such that the root has only one child.
 * a(n) = (1/2^(n-1))*sum(k=1,n,k^(n-1)*binom(n,k))
 * @author Georg Fischer
 */
public class A100526 extends LambdaSequence {

  /** Construct the sequence. */
  public A100526() {
    super(1, n -> Integers.SINGLETON.sum(1, n, k -> Z.valueOf(k).pow(n - 1).multiply(Binomial.binomial(n, k))).divide(Z.TWO.pow(n - 1)));
  }
}
