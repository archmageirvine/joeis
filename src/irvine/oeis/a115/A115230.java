package irvine.oeis.a115;
// Generated by gen_seq4.pl 2025-04-22.ack/lambdan at 2025-04-22 22:21

import irvine.math.function.Functions;
import irvine.math.z.Integers;
import irvine.oeis.DirectSequence;
import irvine.oeis.LambdaSequence;
import irvine.oeis.a010.A010055;
import irvine.oeis.a036.A036987;

/**
 * A115230 Let p = prime(n); a(n) = number of ways to write p = 2^i + q^j where i &gt;= 0, j &gt;= 1, q = odd prime.
 * @author Georg Fischer
 */
public class A115230 extends LambdaSequence {

  private static final DirectSequence A010055 = new A010055();
  private static final DirectSequence A036987 = new A036987();

  /** Construct the sequence. */
  public A115230() {
    super(1, n -> {
      final int p = Functions.PRIME.i(n);
      return Integers.SINGLETON.sum(1, p - 1, k -> A036987.a(k - 1).multiply(Functions.PARITY.z(p - k)).multiply(A010055.a(p - k)));
    });
  }
}
