package irvine.oeis.a161;
// Generated by gen_seq4.pl A161026/partcap2 at 2022-07-06 21:37

import irvine.oeis.memory.MemorySequence;
import irvine.oeis.PrependSequence;
import irvine.oeis.a000.A000040;

/**
 * A161077 Number of partitions of n into primes or 1 where every part appears at least 2 times.
 * @author Georg Fischer
 */
public class A161077 extends A161026 {

  private MemorySequence mSeq = MemorySequence.cachedSequence(new PrependSequence(new A000040(), 0, 1));

  /** Construct the sequence. */
  public A161077() {
    super(1, 2, 1, null);
    mLambda = n -> mSeq.a(n).intValue();
  }

  /**
   * Generic constructor with parameters.
   * @param offset first index
   * @param appears how often every part appears
   */
  public A161077(final int offset, final int appears) {
    super(offset, appears, 1, null);
    mLambda = n -> mSeq.a(n).intValue();
  }
}
