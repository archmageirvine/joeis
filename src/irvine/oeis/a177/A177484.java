package irvine.oeis.a177;
// Generated by gen_seq4.pl egfsi at 2021-12-01 15:37

import irvine.math.group.PolynomialRingField;
import irvine.math.q.Q;
import irvine.math.q.Rationals;
import irvine.math.z.Z;
import irvine.oeis.Sequence0;

/**
 * A177484 The number of permutations having one non-overlapping occurrence of 122'1'.
 * E.g.f.: (1/2 + 1/2*exp(x)*cos(x) + 1/4*(1 + exp(2*x) + 2*exp(x)*sin(x)) * tan(x)) * (1 + (-1 + x)*(1/2 + 1/2*exp(x)*cos(x) + 1/4*(1 + exp(2*x) + 2*exp(x)*sin(x))*tan(x)))
 * @author Georg Fischer
 */
public class A177484 extends Sequence0 {

  private static final PolynomialRingField<Q> RING = new PolynomialRingField<>(Rationals.SINGLETON);
  private int mN = -1;
  private Z mF = Z.ONE;

  @Override
  public Z next() {
    if (++mN != 0) {
      mF = mF.multiply(mN);
    }
    return RING.multiply(RING.add(RING.add(RING.series(RING.one(), RING.monomial(Q.TWO, 0), mN), RING.multiply(RING.multiply(RING.series(RING.one(), RING.monomial(Q.TWO, 0), mN), RING.exp(RING.x(), mN), mN), RING.cos(RING.x(), mN), mN)), RING.multiply(RING.multiply(RING.series(RING.one(), RING.monomial(Q.FOUR, 0), mN), RING.add(RING.add(RING.one(), RING.exp(RING.monomial(Q.TWO, 1), mN)), RING.multiply(RING.multiply(RING.monomial(Q.TWO, 0), RING.exp(RING.x(), mN), mN), RING.sin(RING.x(), mN), mN)), mN), RING.tan(RING.x(), mN), mN)), RING.add(RING.one(), RING.multiply(RING.add(RING.negate(RING.one()), RING.x()), RING.add(RING.add(RING.series(RING.one(), RING.monomial(Q.TWO, 0), mN), RING.multiply(RING.multiply(RING.series(RING.one(), RING.monomial(Q.TWO, 0), mN), RING.exp(RING.x(), mN), mN), RING.cos(RING.x(), mN), mN)), RING.multiply(RING.multiply(RING.series(RING.one(), RING.monomial(Q.FOUR, 0), mN), RING.add(RING.add(RING.one(), RING.exp(RING.monomial(Q.TWO, 1), mN)), RING.multiply(RING.multiply(RING.monomial(Q.TWO, 0), RING.exp(RING.x(), mN), mN), RING.sin(RING.x(), mN), mN)), mN), RING.tan(RING.x(), mN), mN)), mN)), mN).coeff(mN).multiply(mF).toZ();
  }
}
