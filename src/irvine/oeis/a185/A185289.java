package irvine.oeis.a185;
// Generated by gen_seq4.pl expr_gen/lambda at 2023-08-22 13:29

import irvine.math.factorial.MemoryFactorial;
import irvine.math.z.Binomial;
import irvine.math.z.Integers;
import irvine.math.z.Stirling;
import irvine.oeis.LambdaSequence;

/**
 * A185289 In a bipartite graph with 2n vertices (|V_1|=|V_2|=n), this sequence gives the number of ways to create n edges, one for each vertex of V_1, and to rank the vertices of V_2 which have incident edges.
 * a(n) = sum(k=0,n,binom(n,k)*stirl(n,k,2)*k!^2);
 * @author Georg Fischer
 */
public class A185289 extends LambdaSequence {

  /** Construct the sequence. */
  public A185289() {
    super(0, n -> Integers.SINGLETON.sum(0, n, k -> Binomial.binomial(n, k).multiply(Stirling.secondKind(n, k)).multiply(MemoryFactorial.SINGLETON.factorial(k).square())));
  }
}
