package irvine.oeis.a193;
// Generated by gen_seq4.pl 2024-09-16.ack/lambdan at 2024-09-16 19:36

import irvine.math.function.Functions;
import irvine.math.z.Binomial;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A193624 Number of ways n triples can sit in a row without any siblings next to each other.
 * @author Georg Fischer
 */
public class A193624 extends LambdaSequence {

  /** Construct the sequence. */
  public A193624() {
    super(0, n -> Integers.SINGLETON.sum(0, 2 * n, j -> Integers.SINGLETON.sum(-(-j / 2), n, k -> Functions.FACTORIAL.z(n + j).multiply(Binomial.binomial(2 * k, j)).multiply(Binomial.binomial(n, k)).multiply(Z.valueOf(-3).pow(n + k - j)))));
  }
}
