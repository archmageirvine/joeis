package irvine.oeis.a227;
// Generated by gen_seq4.pl 2025-06-08.ack/multia at 2025-06-08 23:06

import irvine.math.function.Functions;
import irvine.math.z.Binomial;
import irvine.math.z.Integers;
import irvine.oeis.transform.MultiTransformSequence;

/**
 * A227119 Number of ways to select a set partition, P of {1,2,...,n} and then select a subset, S of {1,2,...,n} such that for all i in {1,2,...,n-1} if i and i+1 are in S then i and i+1 are in different blocks of P.
 * @author Georg Fischer
 */
public class A227119 extends MultiTransformSequence {

  /** Construct the sequence. */
  public A227119() {
    super(0, (self, n) -> Integers.SINGLETON.sum(1, n, j -> Binomial.binomial(n - 1, j - 1).multiply(Functions.FIBONACCI.z(j + 2)).multiply(self.a(n - j))), "1");
  }
}
