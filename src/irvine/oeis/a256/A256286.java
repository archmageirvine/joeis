package irvine.oeis.a256;
// Generated by gen_seq4.pl expr_gen/lambda at 2023-08-22 13:29

import irvine.math.factorial.MemoryFactorial;
import irvine.math.z.Integers;
import irvine.math.z.Stirling;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A256286 Number of Hamiltonian cycles in a tournament on 3n vertices constructed by taking 3 copies of a transitive tournament on n vertices and placing each copy on a vertex of a directed 3-cycle, with all edges between the copies oriented in the direction of the
 * a(n)=sum(k=1,n,(stirl(n,k,2)*k!)^3/k)
 * @author Georg Fischer
 */
public class A256286 extends LambdaSequence {

  /** Construct the sequence. */
  public A256286() {
    super(1, n -> Integers.SINGLETON.sum(1, n, k -> Stirling.secondKind(n, k).multiply(MemoryFactorial.SINGLETON.factorial(k)).pow(Z.THREE).divide(k)));
  }
}
