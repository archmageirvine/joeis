package irvine.oeis.a277;
// Generated by gen_seq4.pl expr_gen/lambda at 2023-08-22 13:29

import irvine.math.factorial.MemoryFactorial;
import irvine.math.z.Integers;
import irvine.math.z.Stirling;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A277405 a(n) equals the constant term in the sum of all permutations of compositions of functions (1 + k*x) for k=1..n.
 * a(n) = sum(k=0,n-1,k!*(n-k)! * sum(i=0,n-k+1,(-1)^(n-i+1) * stirl(i,n-k+1,2) * stirl(n+1,i,1)))
 * @author Georg Fischer
 */
public class A277405 extends LambdaSequence {

  /** Construct the sequence. */
  public A277405() {
    super(1, n -> Integers.SINGLETON.sum(0, n - 1, k -> MemoryFactorial.SINGLETON.factorial(k).multiply(MemoryFactorial.SINGLETON.factorial(n - k)).multiply(Integers.SINGLETON.sum(0, n - k + 1, i -> (((n - i + 1 & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Stirling.secondKind(i, n - k + 1)).multiply(Stirling.firstKind(n + 1, i))))));
  }
}
