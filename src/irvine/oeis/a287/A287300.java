package irvine.oeis.a287;

import irvine.math.z.Z;
import irvine.oeis.SequenceWithOffset;

/**
 * A287300 Primes that can be generated by the concatenation in base 3, in ascending order, of two consecutive integers read in base 10.
 * @author Georg Fischer
 */
public class A287300 implements SequenceWithOffset {

  private int mN;
  private int mOffset;
  private int mBase;
  private int mIncr1;
  private int mIncr2;

  /** Construct the sequence. */
  public A287300() {
    this(1, 3, 0, 1);
  }

  /**
   * Generic constructor with parameters
   * @param offset first index
   * @param base number base
   * @param incr1 increment for left part of concatenation
   * @param incr2 increment for right part of concatenation
   */
  public A287300(final int offset, final int base, final int incr1, final int incr2) {
    mOffset = offset;
    mN = offset - 1;
    mBase = base;
    mIncr1 = incr1;
    mIncr2 = incr2;
  }

  @Override
  public int getOffset() {
    return mOffset;
  }

  @Override
  public Z next() {
    while (true) {
      ++mN;
      final Z cand = new Z(Integer.toString(mN + mIncr1, mBase) + Integer.toString(mN + mIncr2, mBase), mBase);
      if (cand.isProbablePrime()) {
        return cand;
      }
    }
  }
}
