package irvine.oeis.a290;
// Generated by gen_seq4.pl expr_gen/lambda at 2023-08-24 21:51

import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A290952 Multi de Bruijn Sequences: Number of ways to arrange 2^(n+1) binary digits in a circle so that every length n binary string occurs exactly twice.
 * a(n) = (6^(2^(n-1)) + 2^(2^(n-1))) / 2^(n+1)
 * @author Georg Fischer
 */
public class A290952 extends LambdaSequence {

  /** Construct the sequence. */
  public A290952() {
    super(1, n -> (Z.SIX).pow(Z.ONE.shiftLeft(n - 1)).add(Z.TWO.pow(Z.ONE.shiftLeft(n - 1))).divide(Z.ONE.shiftLeft(n + 1)));
  }
}
