package irvine.oeis.a294;
// Generated by gen_seq4.pl 2025-03-12.ack/wpartsf1 at 2025-03-12 21:05

import irvine.math.predicate.Predicates;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A294101 Number of partitions of n into two parts such that one is squarefree and the other is nonsquarefree.
 * @author Georg Fischer
 */
public class A294101 extends LambdaSequence {

  private static int eval1(final int i) {
    return Predicates.SQUARE_FREE.is(i) ? 1 : 0; // A008966
  }

  /** Construct the sequence. */
  public A294101() {
    super(1, n -> Z.valueOf(n / 2).subtract(Integers.SINGLETON.sum(1, n / 2, i -> Z.valueOf(eval1(i) == eval1(n - i) ? 1 : 0))));
  }
}
