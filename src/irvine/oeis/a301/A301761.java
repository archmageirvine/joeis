package irvine.oeis.a301;
// Generated by gen_seq4.pl 2025-10-13.ack/lambdan at 2025-10-13 18:59

import irvine.math.function.Functions;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A301761 Number of ways to choose a rooted partition of each part in a constant rooted partition of n.
 * @author Georg Fischer
 */
public class A301761 extends LambdaSequence {

  /** Construct the sequence. */
  public A301761() {
    super(1, n -> (n == 1) ? Z.ONE : Integers.SINGLETON.sumdiv(n - 1, d -> Functions.PARTITIONS.z((n - 1) / d - 1).pow(d)));
  }
}
