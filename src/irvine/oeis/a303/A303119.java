package irvine.oeis.a303;
// Generated by gen_seq4.pl 2025-03-12.ack/wpartsf1 at 2025-03-12 21:05

import irvine.math.function.Functions;
import irvine.math.predicate.Predicates;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A303119 Number of partitions of n into two parts (p,q) with p &lt;= q such that p is semiprime and q is squarefree.
 * @author Georg Fischer
 */
public class A303119 extends LambdaSequence {

  private static int eval1(final int i) {
    return Predicates.SQUARE_FREE.is(i) ? 1 : 0; // A008966
  }

  /** Construct the sequence. */
  public A303119() {
    super(1, n -> Integers.SINGLETON.sum(1, n / 2, i -> Z.valueOf(eval1(n - i) * (Functions.BIG_OMEGA.i(i) == 2 ? 1 : 0))));
  }
}
