package irvine.oeis.a303;
// Generated by gen_seq4.pl 2024-08-16.ack/multrar at 2024-08-16 19:15

import irvine.math.z.Z;
import irvine.oeis.transform.MultiTransformSequence;

/**
 * A303767 May code of n: a(0) = 0, and for n &gt; 0, if n = 2^k, a(n) = n + a(n-1), otherwise, when n = 2^k + r (with 0 &lt; r &lt; 2^k), then a(n) = 2^k + a(r-1); see comments for equivalent alternative descriptions.
 * @author Georg Fischer
 */
public class A303767 extends MultiTransformSequence {

  /** Construct the sequence. */
  public A303767() {
    super(0, (self, n) -> {
      final int h1 = Integer.highestOneBit(n);
      return (n == h1) ? self.a(n - 1).add(n) : Z.valueOf(h1).add(self.a(n - h1 - 1));
    }, "0");
  }
}
