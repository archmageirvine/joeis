package irvine.oeis.a307;
// Generated by gen_seq4.pl 2025-03-12.ack/wpartsf1 at 2025-03-12 21:05

import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A307857 Number of partitions of n into 1, 2 or 3 nonprime parts.
 * @author Georg Fischer
 */
public class A307857 extends LambdaSequence {

  private static int eval1(final int i) {
    return Z.valueOf(i).isProbablePrime() ? 0 : 1; // A005171
  }

  /** Construct the sequence. */
  public A307857() {
    super(1, n -> Z.valueOf(eval1(n)).add(Integers.SINGLETON.sum(1, n / 2, i -> Z.valueOf((long) eval1(i) * eval1(n - i)))).add(Integers.SINGLETON.sum(1, n / 3, j -> Integers.SINGLETON.sum(j, (n - j) / 2, i -> Z.valueOf((long) eval1(i) * eval1(j) * eval1(n - i - j))))));
  }
}
