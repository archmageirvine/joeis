package irvine.oeis.a308;
// Generated by gen_seq4.pl expr_gen/lambda at 2023-08-24 21:51

import irvine.math.factorial.MemoryFactorial;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A308325 a(n) = Sum_{i=0..n} Sum_{j=0..n} Sum_{k=0..n} Sum_{l=0..n} Sum_{m=0..n} (-1)^(i+j+k+l+m) * (i+j+k+l+m)!/(i!*j!*k!*l!*m!).
 * a(n) = sum(i=0,n,sum(j=0,n,sum(k=0,n,sum(l=0,n,sum(m=0,n,(-1)^(i+j+k+l+m)*(i+j+k+l+m)!/(i!*j!*k!*l!*m!))))))
 * @author Georg Fischer
 */
public class A308325 extends LambdaSequence {

  /** Construct the sequence. */
  public A308325() {
    super(0, n -> Integers.SINGLETON.sum(0, n, i -> Integers.SINGLETON.sum(0, n, j -> Integers.SINGLETON.sum(0, n, k -> Integers.SINGLETON.sum(0, n, l -> Integers.SINGLETON.sum(0, n, m -> (((i + j + k + l + m & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(MemoryFactorial.SINGLETON.factorial(i + j + k + l + m)).divide(MemoryFactorial.SINGLETON.factorial(i).multiply(MemoryFactorial.SINGLETON.factorial(j)).multiply(MemoryFactorial.SINGLETON.factorial(k)).multiply(MemoryFactorial.SINGLETON.factorial(l)).multiply(MemoryFactorial.SINGLETON.factorial(m)))))))));
  }
}
