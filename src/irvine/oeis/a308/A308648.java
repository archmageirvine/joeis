package irvine.oeis.a308;
// Generated by gen_seq4.pl egfsi at 2021-12-01 15:37

import irvine.math.group.PolynomialRingField;
import irvine.math.q.Q;
import irvine.math.q.Rationals;
import irvine.math.z.Z;
import irvine.oeis.Sequence0;

/**
 * A308648 Number of degree-n odd permutations of order dividing 8.
 * E.g.f.: (1/2)*exp(x + (1/2)*x^2 + (1/4)*x^4 + (1/8)*x^8) - (1/2)*exp(x - (1/2)*x^2 -(1/4)*x^4 - (1/8)*x^8)
 * @author Georg Fischer
 */
public class A308648 extends Sequence0 {

  private static final PolynomialRingField<Q> RING = new PolynomialRingField<>(Rationals.SINGLETON);
  private int mN = -1;
  private Z mF = Z.ONE;

  @Override
  public Z next() {
    if (++mN != 0) {
      mF = mF.multiply(mN);
    }
    return RING.subtract(RING.multiply(RING.series(RING.one(), RING.monomial(Q.TWO, 0), mN), RING.exp(RING.add(RING.add(RING.add(RING.x(), RING.multiply(RING.series(RING.one(), RING.monomial(Q.TWO, 0), mN), RING.pow(RING.x(), 2, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(Q.FOUR, 0), mN), RING.pow(RING.x(), 4, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(Q.EIGHT, 0), mN), RING.pow(RING.x(), 8, mN), mN)), mN), mN), RING.multiply(RING.series(RING.one(), RING.monomial(Q.TWO, 0), mN), RING.exp(RING.subtract(RING.subtract(RING.subtract(RING.x(), RING.multiply(RING.series(RING.one(), RING.monomial(Q.TWO, 0), mN), RING.pow(RING.x(), 2, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(Q.FOUR, 0), mN), RING.pow(RING.x(), 4, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(Q.EIGHT, 0), mN), RING.pow(RING.x(), 8, mN), mN)), mN), mN)).coeff(mN).multiply(mF).toZ();
  }
}
