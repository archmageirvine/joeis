package irvine.oeis.a336;
// Generated by gen_seq4.pl genetfg at 2020-12-16 11:03
// DO NOT EDIT here!

import irvine.math.z.Z;
import irvine.oeis.GeneralizedEulerTransform;
import irvine.oeis.a032.A032020;


/**
 * A336142 Number of ways to choose a strict composition of each part of a strict integer partition of n.
 * G.f.: <code>Product_{k&gt;=1} ((1+A032020(k)*x^k))</code>
 * @author Georg Fischer
 */
public class A336142 extends GeneralizedEulerTransform {

  /**
   * Construct the sequence.
   */
  public A336142() {
    super(0, 1);
    mSeqG = new A032020();
    mSeqG.next();
  }

  @Override
  protected Z[] advanceF(final long k) {
    return new Z[]{Z.NEG_ONE};
  }

  @Override
  protected Z advanceG(final long k) {
    return mSeqG.next().negate();
  }

}
