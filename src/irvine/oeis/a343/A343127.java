package irvine.oeis.a343;
// Generated by gen_seq4.pl wparts/wpartsf2 at 2025-03-11 22:45

import irvine.math.q.Q;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A343127 Number of solutions to n = x + y + z in positive integers x,y,z such that (x+y) does not divide any of x*y, y*z, or x*z.
 * @author Georg Fischer
 */
public class A343127 extends LambdaSequence {

  private static int eval2(final int i, final int j) {
    final Q qv = new Q(i, j);
    return qv.ceiling().intValue() - qv.floor().intValue(); // fchi
  }

  /** Construct the sequence. */
  public A343127() {
    super(1, n -> Integers.SINGLETON.sum(1, n / 3, j -> Integers.SINGLETON.sum(j, (n - j) / 2, i -> Z.valueOf(eval2(i * j, (i + j)) * eval2(i * (n - i - j), (n - j)) * eval2(j * (n - i - j), (n - i))))));
  }
}
