package irvine.oeis.a343;
// Generated by gen_seq4.pl 2025-03-12.ack/wpartsf2 at 2025-03-12 21:05

import irvine.math.q.Q;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A343399 Number of partitions of n into 3 distinct parts [r,s,t] such that r &lt; s &lt; t where at least 1 part does not divide any larger part.
 * @author Georg Fischer
 */
public class A343399 extends LambdaSequence {

  private static int eval2(final int i, final int j) {
    final Q qv = new Q(i, j);
    return qv.ceiling().intValue() - qv.floor().intValue(); // fchi
  }

  /** Construct the sequence. */
  public A343399() {
    super(1, n -> Integers.SINGLETON.sum(1, n / 3, j -> Integers.SINGLETON.sum(j, (n - j) / 2, i -> Z.valueOf(Integer.signum(eval2(i, j) + eval2(n - i - j, i) + eval2(n - i - j, j)) * (1 - (j == i ? 1 : 0)) * (1 - (n - j == 2 * i ? 1 : 0))))));
  }
}
