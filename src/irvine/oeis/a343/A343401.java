package irvine.oeis.a343;
// Generated by gen_seq4.pl wparts/wpartsf2 at 2025-03-11 22:45

import irvine.math.q.Q;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A343401 Number of partitions of n into 3 parts [r,s,t] such that r &lt; s &lt; t where no part divides any larger part and at least 1 part divides n.
 * @author Georg Fischer
 */
public class A343401 extends LambdaSequence {

  private static int eval2(final int i, final int j) {
    final Q qv = new Q(i, j);
    return qv.ceiling().intValue() - qv.floor().intValue(); // fchi
  }

  /** Construct the sequence. */
  public A343401() {
    super(1, n -> Integers.SINGLETON.sum(1, n / 3, j -> Integers.SINGLETON.sum(j, (n - j) / 2, i -> Z.valueOf(Integer.signum(3 - eval2(n, j) - eval2(n, i) - eval2(n, (n - i - j))) * eval2(i, j) * eval2((n - i - j), i) * eval2((n - i - j), j)))));
  }
}
