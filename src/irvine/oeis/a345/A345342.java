package irvine.oeis.a345;
// Generated by gen_seq4.pl lambdian2/lambdan at 2024-09-23 17:41

import irvine.math.function.Functions;
import irvine.math.z.Binomial;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A345342 Number of permutations of [2n] having n cycles of the form (c1, c2, ..., c_m) where c1 = min_{i&gt;=1} c_i and c_j = min_{i&gt;=j} c_i or c_j = max_{i&gt;=j} c_i.
 * @author Georg Fischer
 */
public class A345342 extends LambdaSequence {

  /** Construct the sequence. */
  public A345342() {
    super(0, n -> (n == 0) ? Z.ONE : Integers.SINGLETON.sum(0, n, k -> Binomial.binomial(2L * n, n + k + 1).multiply(Functions.STIRLING2.z(n + k + 1, k + 1))));
  }
}
