package irvine.oeis.a348;
// Generated by gen_seq4.pl wparts/wpartsf2 at 2025-03-11 22:45

import irvine.math.q.Q;
import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A348531 Number of partitions of n into 3 parts where at least one of the parts divides the product of the other two.
 * @author Georg Fischer
 */
public class A348531 extends LambdaSequence {

  private static int eval2(final int i, final int j) {
    final Q qv = new Q(i, j);
    return 1 - qv.ceiling().intValue() + qv.floor().intValue(); // f1chi
  }

  /** Construct the sequence. */
  public A348531() {
    super(1, n -> Integers.SINGLETON.sum(1, n / 3, j -> Integers.SINGLETON.sum(j, (n - j) / 2, i -> Z.valueOf(Integer.signum(eval2(i * (n - i - j), j) + eval2(j * (n - i - j), i) + eval2(i * j, n - i - j))))));
  }
}

