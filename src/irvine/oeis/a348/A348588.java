package irvine.oeis.a348;
// Generated by gen_seq4.pl wparts/wpartsf1 at 2025-03-11 22:45

import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.LambdaSequence;

/**
 * A348588 Number of partitions of n into 3 parts with at least 1 prime part.
 * @author Georg Fischer
 */
public class A348588 extends LambdaSequence {

  private static int eval1(final int i) {
    return Z.valueOf(i).isProbablePrime() ? 1 : 0; // A010051
  }

  /** Construct the sequence. */
  public A348588() {
    super(0, n -> Integers.SINGLETON.sum(1, n / 3, j -> Integers.SINGLETON.sum(j, (n - j) / 2, i -> Z.valueOf(Integer.signum(eval1(i) + eval1(j) + eval1(n - i - j))))));
  }
}
