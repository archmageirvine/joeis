package irvine.oeis.a363;
// Generated by gen_seq4.pl 2025-02-06.ack/decexp at 2025-02-06 23:16

import irvine.math.cr.CR;
import irvine.math.cr.functions.CrFunctions;
import irvine.oeis.cons.DecimalExpansionSequence;

/**
 * A363178 Decimal expansion of Product_{k&gt;=1} (1 - exp(-13*Pi*k)).
 * Formula:
 * @author Georg Fischer
 */
public class A363178 extends DecimalExpansionSequence {

  /** Construct the sequence */
  public A363178() {
    super(0, CR.valueOf(13).multiply(CR.PI).divide(CR.valueOf(24)).exp().multiply(CrFunctions.GAMMA.cr(CR.ONE.divide(CR.FOUR))).multiply(CR.ZERO.subtract(CR.valueOf(11).subtract(CR.SIX.multiply(CR.THREE.sqrt())).pow(CR.ONE.divide(CR.SIX))).add(CR.valueOf(11).add(CR.SIX.multiply(CR.THREE.sqrt())).pow(CR.ONE.divide(CR.SIX))).divide(CR.valueOf(11).subtract(CR.SIX.multiply(CR.THREE.sqrt())).pow(CR.ONE.divide(CR.SIX)).multiply(CR.ONE.add(CR.TWO.multiply(CR.THREE.sqrt()))).add(CR.ZERO.subtract(CR.ONE).add(CR.TWO.multiply(CR.THREE.sqrt())).multiply(CR.valueOf(11).add(CR.SIX.multiply(CR.THREE.sqrt())).pow(CR.ONE.divide(CR.SIX))))).pow(CR.ONE.divide(CR.FOUR))).multiply(CR.ZERO.subtract(CR.FIVE).subtract(CR.ZERO.subtract(CR.valueOf(91)).add(CR.valueOf(39).multiply(CR.THREE.sqrt())).subtract(CR.valueOf(18).multiply(CR.valueOf(13).sqrt())).add(CR.valueOf(15).multiply(CR.valueOf(39).sqrt())).pow(CR.ONE_THIRD)).add(CR.valueOf(91).add(CR.valueOf(39).multiply(CR.THREE.sqrt())).add(CR.valueOf(18).multiply(CR.valueOf(13).sqrt())).add(CR.valueOf(15).multiply(CR.valueOf(39).sqrt())).pow(CR.ONE_THIRD)).pow(CR.THREE.divide(CR.FOUR))).multiply(CR.valueOf(14).add(CR.valueOf(13).multiply(CR.valueOf(821).subtract(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).add(CR.valueOf(13).multiply(CR.valueOf(821).add(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).sqrt().add(CR.valueOf(26).add(CR.valueOf(13).multiply(CR.valueOf(821).subtract(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).add(CR.valueOf(13).multiply(CR.valueOf(821).add(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).sqrt()).sqrt().divide(CR.PI.pow(CR.THREE.divide(CR.FOUR)).multiply(CR.THREE).multiply(CR.TWO.pow(CR.valueOf(11).divide(CR.EIGHT))).multiply(CR.valueOf(13).sqrt()).multiply(CR.ONE.divide(CR.valueOf(2985984)).multiply(CR.valueOf(14).add(CR.valueOf(13).multiply(CR.valueOf(821).subtract(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).add(CR.valueOf(13).multiply(CR.valueOf(821).add(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).sqrt().add(CR.valueOf(26).add(CR.valueOf(13).multiply(CR.valueOf(821).subtract(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).add(CR.valueOf(13).multiply(CR.valueOf(821).add(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).sqrt()).pow(12)).subtract(CR.ZERO.subtract(CR.ONE).add(CR.ONE.divide(CR.valueOf(8916100448256L)).multiply(CR.valueOf(14).add(CR.valueOf(13).multiply(CR.valueOf(821).subtract(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).add(CR.valueOf(13).multiply(CR.valueOf(821).add(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).sqrt().add(CR.valueOf(26).add(CR.valueOf(13).multiply(CR.valueOf(821).subtract(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).add(CR.valueOf(13).multiply(CR.valueOf(821).add(CR.valueOf(72).multiply(CR.THREE.sqrt()))).pow(CR.ONE_THIRD)).sqrt()).pow(24))).sqrt()).pow(CR.ONE.divide(CR.EIGHT))))));
  }
}
