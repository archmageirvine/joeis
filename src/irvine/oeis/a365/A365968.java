package irvine.oeis.a365;
// Generated by gen_seq4.pl 2025-02-10.ack/tablamb at 2025-02-10 21:26

import irvine.math.z.Integers;
import irvine.math.z.Z;
import irvine.oeis.triangle.LambdaTable;

/**
 * A365968 Irregular triangle read by rows: T(n,k) (0 &lt;= n, 0 &lt;= k &lt; 2^n). An infinite binary tree with root node 0 in row n = 0. Each node then has left child (2*j) - k - 1 and right child (2*j) - k + 1, where j and k are the values of the parent and grandparent nodes respectively.
 * @author Georg Fischer
 */
public class A365968 extends LambdaTable {

  /** Construct the sequence. */
  public A365968() {
    super(0, 0, n -> new Integer[]{0, (1 << n) - 1}, (n, k) -> Integers.SINGLETON.sum(0, n - 1, i -> Z.valueOf(k).testBit(i) ? Z.valueOf(i + 1) : Z.valueOf(-i - 1)));
  }
}
